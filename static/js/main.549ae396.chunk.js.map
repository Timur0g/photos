{"version":3,"sources":["App.module.scss","reportWebVitals.js","redux/imagesReducer.js","redux/store.js","ModalWindow.jsx","App.js","AppContainer.js","index.js"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","GET_IMAGES","SET_MODAL_WINDOW","CHANGE_TEXT_VALUE_COMMENT","initialState","images","modalWindow","textValueComment","setModalWindow","image","type","changeTextValueComment","value","getImagesThunk","dispatch","Axios","get","response","data","reducers","combineReducers","state","action","store","createStore","applyMiddleware","thunkMiddleware","Comment","props","className","style","comment","alt","src","text","ModalWindow","quit","onClick","url","comments","map","id","input","placeholder","onChange","e","target","alert","App","length","app","photos","blur","item","setModalWindowThunk","AppContainerClass","this","React","Component","AppContainer","connect","addCommentThunk","post","qs","stringify","name","headers","mode","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.549ae396.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__H_p2J\",\"photos\":\"App_photos__2yeRd\",\"item\":\"App_item__1r3zJ\",\"modalWindow\":\"App_modalWindow__fnC-I\",\"comments\":\"App_comments__3y6Yi\",\"comment\":\"App_comment__1w50L\",\"input\":\"App_input__3Weoc\",\"quit\":\"App_quit__wE3Vv\",\"blur\":\"App_blur__29V7X\"};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import Axios from \"axios\";\r\nimport qs from 'qs';\r\nconst GET_IMAGES = 'GET_IMAGES';\r\nconst SET_MODAL_WINDOW = 'SET_MODAL_WINDOW';\r\nconst CHANGE_TEXT_VALUE_COMMENT = 'CHANGE_TEXT_VALUE_COMMENT';\r\n// const ADD_COMMENT = 'ADD_COMMENT';\r\n\r\n\r\nconst initialState = {\r\n    images: [],\r\n    modalWindow: {},\r\n    textValueComment: ''\r\n}\r\n\r\nexport const imagesReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_IMAGES:\r\n            return { ...state, images: action.images }\r\n        case SET_MODAL_WINDOW:\r\n            return { ...state, modalWindow: action.image }\r\n        case CHANGE_TEXT_VALUE_COMMENT: \r\n            return {...state, textValueComment: action.value}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const getImages = images => { return { type: GET_IMAGES, images: images } };\r\nexport const setModalWindow = image => { return { type: SET_MODAL_WINDOW, image: image } };\r\nexport const changeTextValueComment = value => { return { type: CHANGE_TEXT_VALUE_COMMENT, value: value } };\r\n\r\nexport const getImagesThunk = () => dispatch => {\r\n    Axios.get('https://boiling-refuge-66454.herokuapp.com/images').then(response => {\r\n        dispatch(getImages(response.data));\r\n    })\r\n}\r\n\r\nexport const setModalWindowThunk = id => dispatch => {\r\n    Axios.get(`https://boiling-refuge-66454.herokuapp.com/images/${id}`).then(response => {\r\n        dispatch(setModalWindow(response.data));\r\n    })\r\n}\r\n\r\nexport const addCommentThunk = (id, value) => dispatch => {\r\n    Axios.post(`https://boiling-refuge-66454.herokuapp.com/images/${id}/comments`, qs.stringify({\r\n        name: 'Аноним',\r\n        comment: value,\r\n    }), {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Access-Control-Allow-Origin': '*',\r\n            mode: 'no-cors',\r\n        },\r\n    }).then(response => {\r\n        dispatch(changeTextValueComment(''));\r\n    })\r\n}\r\n\r\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport { imagesReducer } from \"./imagesReducer\";\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\nconst reducers = combineReducers({\r\n    images: imagesReducer,\r\n});\r\n\r\nexport const store = createStore(reducers, applyMiddleware(thunkMiddleware));","import React from 'react';\r\nimport style from './App.module.scss'\r\n\r\nconst Comment = props => {\r\n    return (\r\n        <div className={style.comment}>\r\n            <div>\r\n                <img alt=\"ava\" src=\"https://upload.wikimedia.org/wikipedia/commons/7/70/User_icon_BLACK-01.png\"></img>\r\n            </div>\r\n            <span>{props.text}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ModalWindow = props => {\r\n    const showAlert = () => {\r\n        alert(`К сожалению, POST запрос сделать невозможно. \r\n        Пробовал и с помощью http://seriyps.ru/postget/ и через Axios\r\n         - всё без толку. Возможно POST вообще не работает, и поэтому есть только один комментарий (на первой фотке с пёсиком). Thunk\\`а на запрос готова`)\r\n    }\r\n    return (\r\n        <div className={style.modalWindow}>\r\n            <div className={style.quit} onClick={() => {\r\n                props.setModalWindow({})\r\n                props.changeTextValueComment('')\r\n                }}></div>\r\n            <img src={props.modalWindow.url} alt=\"?\"></img>\r\n            <div className={style.comments}>{props.modalWindow.comments.map(comment => <Comment text={comment.text} key={comment.id}/>)}</div>\r\n\r\n            <div className={style.input}>\r\n                <input type=\"text\" placeholder=\"Оставтье свой комментарий...\" onChange={(e) => props.changeTextValueComment(e.target.value)} value={props.textValueComment}></input>\r\n                <button onClick={() => showAlert()}><img alt=\"отправить\" src=\"https://cdn.icon-icons.com/icons2/510/PNG/512/android-send_icon-icons.com_50500.png\"></img></button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default ModalWindow;","import React from 'react';\nimport style from './App.module.scss'\nimport ModalWindow from './ModalWindow';\nconst App = props => {\n  if(props.images.length === 0) {\n    return \"Идет загрузка...\"\n  }\n  return (\n    <div className={style.app}>\n      {props.modalWindow.id ? <ModalWindow {...props}/> : null}\n      <h1>photos.free</h1>\n      <div className={`${style.photos} ${props.modalWindow.id ? style.blur : \"\"}`}>  \n        {props.images.map(image => <img \n        className={style.item}\n        src={image.url} \n        key={image.id} \n        onClick={() => props.setModalWindowThunk(image.id)}\n        alt=\"?\"></img>)} \n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport App from \"./App\";\r\nimport {setModalWindow, getImagesThunk, setModalWindowThunk, changeTextValueComment, addCommentThunk } from \"./redux/imagesReducer\";\r\n\r\n\r\nclass AppContainerClass extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getImagesThunk()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <App {...this.props}/>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        images: state.images.images,\r\n        modalWindow: state.images.modalWindow,\r\n        textValueComment: state.images.textValueComment\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getImagesThunk: () =>  dispatch(getImagesThunk()),\r\n        setModalWindowThunk: id => dispatch(setModalWindowThunk(id)),\r\n        setModalWindow: id => dispatch(setModalWindow(id)),\r\n        changeTextValueComment: value => dispatch(changeTextValueComment(value)),\r\n        addCommentThunk: (id, value) => dispatch(addCommentThunk(id, value))\r\n    }\r\n}\r\n\r\nexport const AppContainer = connect(mapStateToProps, mapDispatchToProps)(AppContainerClass)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\nimport { AppContainer } from './AppContainer';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <AppContainer />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}